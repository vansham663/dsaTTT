 
#include <iostream> 
using namespace std; 
 
class TicTacToe { 
private: 
    char board[3][3]; 
    char currentPlayer; 
 
public: 
    TicTacToe() { 
        // Initialize board and current player 
        for(int i = 0; i < 3; i++) 
            for(int j = 0; j < 3; j++) 
                board[i][j] = ' '; 
        currentPlayer = 'X'; 
    } 
 
    void displayBoard() { 
        cout << "Current board:\n"; 
        for(int i = 0; i < 3; i++) { 
            for(int j = 0; j < 3; j++) { 
                cout << board[i][j]; 
                if(j < 2) cout << " | "; 
            } 
            cout << endl; 
            if(i < 2) cout << "--|---|--\n"; 
        } 
    } 
 
    bool makeMove(int row, int col) { 
        if(row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == ' ') { 
            board[row][col] = currentPlayer; 
            return true; 
        } 
        return false; 
    } 
 
    bool checkWin() { 
        // Check rows and columns 
        for(int i = 0; i < 3; i++) { 
            if((board[i][0] == currentPlayer && board[i][1] == currentPlayer && board[i][2] == 
currentPlayer) || 
               (board[0][i] == currentPlayer && board[1][i] == currentPlayer && board[2][i] == 
  
currentPlayer)) 
                return true; 
        } 
        // Check diagonals 
        if((board[0][0] == currentPlayer && board[1][1] == currentPlayer && board[2][2] == 
currentPlayer) || 
           (board[0][2] == currentPlayer && board[1][1] == currentPlayer && board[2][0] == 
currentPlayer)) 
            return true; 
        return false; 
    } 
 
    bool checkDraw() { 
        for(int i = 0; i < 3; i++) 
            for(int j = 0; j < 3; j++) 
                if(board[i][j] == ' ') 
                    return false; 
        return true; 
    } 
 
    void switchPlayer() { 
        currentPlayer = (currentPlayer == 'X') ? 'O' : 'X'; 
    } 
 
    char getCurrentPlayer() { 
        return currentPlayer; 
    } 
}; 
 
int main() { 
    TicTacToe game; 
    int row, col; 
    bool gameEnded = false; 
 
    while(!gameEnded) { 
        game.displayBoard(); 
        cout << "Player " << game.getCurrentPlayer() << ", enter your move (row and column): "; 
        cin >> row >> col; 
 
        if(game.makeMove(row-1, col-1)) { 
            if(game.checkWin()) { 
                game.displayBoard(); 
                cout << "Player " << game.getCurrentPlayer() << " wins!\n"; 
                gameEnded = true; 
            } else if(game.checkDraw()) { 
                game.displayBoard(); 
                cout << "It's a draw!\n"; 
                gameEnded = true; 
            } else { 
                game.switchPlayer(); 
            } 
        } else { 
            cout << "Invalid move. Try again.\n"; 
        } 
    } 
  
 
    return 0; 
} 
 
